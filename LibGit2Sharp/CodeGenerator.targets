<Project>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <Target Name="DefineProperties">
    <PropertyGroup>
      <NativeDllNamePath>$(IntermediateOutputPath)NativeDllName.g.cs</NativeDllNamePath>
      <UniqueIdentifierPath>$(IntermediateOutputPath)UniqueIdentifier.g.cs</UniqueIdentifierPath>
      <AssemblyCommitIdsPath>$(IntermediateOutputPath)AssemblyCommitIds.g.cs</AssemblyCommitIdsPath>
    </PropertyGroup>
  </Target>


  <Target Name="GenerateNativeDllNameCs" Inputs="@(EmbeddedResource)" Outputs="$(NativeDllNamePath)" BeforeTargets="CoreCompile" DependsOnTargets="DefineProperties">

    <ReadLinesFromFile File="@(EmbeddedResource)" Condition=" '%(Filename)%(Extension)' == 'libgit2_filename.txt' ">
      <Output TaskParameter="Lines" PropertyName="libgit2FileName" />
    </ReadLinesFromFile>

    <PropertyGroup>
      <NativeDllNameSourceLines>
        namespace LibGit2Sharp.Core
        {
        internal static class NativeDllName
        {
        public const string Name = "$(libgit2FileName)"%3b
        }
        }
      </NativeDllNameSourceLines>
    </PropertyGroup>

    <WriteLinesToFile File="$(NativeDllNamePath)" Lines="$(NativeDllNameSourceLines)" Overwrite="true" />

    <ItemGroup>
      <Compile Include="$(NativeDllNamePath)" />
      <FileWrites Include="$(NativeDllNamePath)" />
    </ItemGroup>

  </Target>


  <Target Name="GenerateUniqueIdentifierCs" Inputs="$(MSBuildThisFileFullPath);$(MSBuildAllProjects);@(Compile)" Outputs="$(UniqueIdentifierPath)" BeforeTargets="CoreCompile" DependsOnTargets="DefineProperties">

    <PropertyGroup>
      <UniqueIdSourceLines>
        namespace LibGit2Sharp.Core
        {
        internal static class UniqueId
        {
        public const string UniqueIdentifier = "$([System.Guid]::NewGuid())"%3b
        }
        }
      </UniqueIdSourceLines>
    </PropertyGroup>

    <WriteLinesToFile File="$(UniqueIdentifierPath)" Lines="$(UniqueIdSourceLines)" Overwrite="true" />

    <ItemGroup>
      <Compile Include="$(UniqueIdentifierPath)" />
      <FileWrites Include="$(UniqueIdentifierPath)" />
    </ItemGroup>

  </Target>


  <Target Name="AddNativeDllCommitShaToBuildMetadata" BeforeTargets="GetBuildVersion" Condition="'$(IsCrossTargetingBuild)' != 'true'">

    <ReadLinesFromFile File="@(EmbeddedResource)" Condition=" '%(Filename)%(Extension)' == 'libgit2_hash.txt' ">
      <Output TaskParameter="Lines" PropertyName="libgit2hash" />
    </ReadLinesFromFile>

    <ItemGroup>
      <BuildMetadata Include="libgit2-$(libgit2hash.Substring(0,7))" />
    </ItemGroup>

  </Target>

  <Target Name="GenerateAssemblyCommitIdsCs" Inputs="@(EmbeddedResource);$(VersionSourceFile)" Outputs="$(AssemblyCommitIdsPath)" BeforeTargets="CoreCompile" DependsOnTargets="DefineProperties;GenerateAssemblyVersionInfo" Condition="'$(GitCommitId)' != ''">

    <ReadLinesFromFile File="@(EmbeddedResource)" Condition=" '%(Filename)%(Extension)' == 'libgit2_hash.txt' ">
      <Output TaskParameter="Lines" PropertyName="libgit2hash" />
    </ReadLinesFromFile>

    <PropertyGroup>
      <AssemblyCommitIdsSourceLines>
        namespace LibGit2Sharp
        {
        internal static class AssemblyCommitIds
        {
        public const string LibGit2CommitSha = "$(libgit2hash)"%3b
        public const string LibGit2SharpCommitSha = "$(GitCommitId)"%3b
        }
        }
      </AssemblyCommitIdsSourceLines>
    </PropertyGroup>

    <WriteLinesToFile File="$(AssemblyCommitIdsPath)" Lines="$(AssemblyCommitIdsSourceLines)" Overwrite="true" />

    <ItemGroup>
      <Compile Include="$(AssemblyCommitIdsPath)" />
      <FileWrites Include="$(AssemblyCommitIdsPath)" />
    </ItemGroup>

  </Target>

</Project>
